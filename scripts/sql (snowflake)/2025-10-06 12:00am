-- =====================================================================
-- AIRBYTE INTEGRATION
-- =====================================================================
-- Start the lab_airbyte
CREATE WAREHOUSE IF NOT EXISTS LAB_WH_AIRBYTE
  WAREHOUSE_SIZE = 'XSMALL'
  AUTO_SUSPEND = 60
  AUTO_RESUME = TRUE
  INITIALLY_SUSPENDED = TRUE;

USE WAREHOUSE LAB_WH_AIRBYTE;

CREATE DATABASE LAB_PIPELINE;
CREATE SCHEMA STAGING;
CREATE ROLE AIRBYTE_DEV;

CREATE USER AIRBYTE_DEV
  DEFAULT_ROLE = AIRBYTE_DEV
  DEFAULT_WAREHOUSE = LAB_WH_AIRBYTE
  DEFAULT_NAMESPACE = LAB_PIPELINE.PUBLIC
  PASSWORD = 'mudar@123';

GRANT ROLE AIRBYTE_DEV TO USER AIRBYTE_DEV;

-- Use of the warehouse, database and schema
GRANT USAGE ON WAREHOUSE LAB_WH_AIRBYTE TO ROLE AIRBYTE_DEV;
GRANT OPERATE ON WAREHOUSE LAB_WH_AIRBYTE TO ROLE AIRBYTE_DEV;
GRANT USAGE ON DATABASE LAB_PIPELINE TO ROLE AIRBYTE_DEV;
GRANT USAGE ON SCHEMA LAB_PIPELINE.PUBLIC TO ROLE AIRBYTE_DEV;
GRANT USAGE ON SCHEMA LAB_PIPELINE.STAGING TO ROLE AIRBYTE_DEV;

-- To access to tables
GRANT SELECT, UPDATE, INSERT, DELETE ON ALL TABLES IN SCHEMA LAB_PIPELINE.PUBLIC TO ROLE AIRBYTE_DEV;
GRANT SELECT, UPDATE, INSERT, DELETE ON FUTURE TABLES IN SCHEMA LAB_PIPELINE.PUBLIC TO ROLE AIRBYTE_DEV;

GRANT SELECT, UPDATE, INSERT, DELETE ON ALL TABLES IN SCHEMA LAB_PIPELINE.STAGING TO ROLE AIRBYTE_DEV;
GRANT SELECT, UPDATE, INSERT, DELETE ON FUTURE TABLES IN SCHEMA LAB_PIPELINE.STAGING TO ROLE AIRBYTE_DEV;

-- To create schemas and tables
GRANT CREATE SCHEMA ON DATABASE LAB_PIPELINE TO ROLE AIRBYTE_DEV;
GRANT CREATE TABLE ON SCHEMA LAB_PIPELINE.PUBLIC TO ROLE AIRBYTE_DEV;
GRANT CREATE FUNCTION ON SCHEMA LAB_PIPELINE.PUBLIC TO ROLE AIRBYTE_DEV;

GRANT CREATE TABLE ON SCHEMA LAB_PIPELINE.STAGING TO ROLE AIRBYTE_DEV;
GRANT CREATE FUNCTION ON SCHEMA LAB_PIPELINE.STAGING TO ROLE AIRBYTE_DEV;


SELECT * FROM LAB_PIPELINE.STAGING.DISPONIBILIDADE_USINA_2025_08;

SELECT CURRENT_ACCOUNT(), CURRENT_REGION();




select count(*) from RAW_STAGE.INMET_STAGE_RAW;
select "Data", count(*) from RAW.STG_INMET_DATA group by "Data";

select count(*) from RAW.STG_INMET_DATA;
select * from RAW.INMET_STAGE;

select "Data", count(*) from RAW.STG_INMET_DATA group by "Data";

SELECT 
    YEAR(TO_DATE("Data", 'YYYY/MM/DD')) AS ano,
    COUNT(*) AS total_registros
FROM  RAW.STG_INMET_DATA
GROUP BY YEAR(TO_DATE("Data", 'YYYY/MM/DD'))
UNION ALL
SELECT 
    TO_CHAR(TO_DATE("Data", 'YYYY/MM/DD'), 'YYYY/MM') AS mes,
    COUNT(*) AS total_registros
FROM  RAW.STG_INMET_DATA
GROUP BY TO_CHAR(TO_DATE("Data", 'YYYY/MM/DD'), 'YYYY/MM')
ORDER BY 1;


SELECT 
    TO_CHAR(TO_DATE("Data", 'YYYY/MM/DD'), 'YYYY') AS ano,
    COUNT(*) AS total_registros
FROM RAW.STG_INMET_DATA
GROUP BY TO_CHAR(TO_DATE("Data", 'YYYY/MM/DD'), 'YYYY');




SELECT 
    TO_CHAR(TO_DATE("Data", 'YYYY/MM/DD'), 'YYYY-MM') AS mes,
    COUNT(*) AS total
FROM RAW.STG_INMET_DATA
GROUP BY TO_CHAR(TO_DATE("Data", 'YYYY/MM/DD'), 'YYYY-MM')
ORDER BY mes;